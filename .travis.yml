language: generic
env:
  global:
    - COMMIT_AUTHOR_EMAIL="psyplot@hzg.de"
    - BUILD_STR_END=cf
    # github token
    - secure: "avtfM/IM75N6kADzVximO5F4vxpIt2YKw0v/ESyQme7b0h2SMOR5Ql6HvXXWqFRQj1Kr7pGrvnPRlCBvQViTOFTsRHSyGsTrBAvdThYiJiWe2VFC7HWvtkmyn7GWO0XNMVS06B/FZgJyj811txvP2wOTeMxe0i9KCI9ao4w07sc5ZXrG+KX8oyOvxqEeGrNStvoH/HAHnLWBjccQ7skwYIavP2WmtzdY1JrKLnSOJEcBuW1LTcGY4f5FPjxAh+jhOYrFVJNajwX37l3BfPvdVEkDdh+MP41z1MNHyhiwVsBGiPoyonnlsoC9zCwTXYlqrTgQc4Ud67kvFYBulLTbU69Uv2+Q8AOMlV+JOrs1aPtAgHpqXkkT208uTCUUTN8vWlRenLvvE06txgzu0v+hb4PjBQcRGZ5XEPOOzArtvDR8deJwqbXya0bwBbny40v706gBQ8VFBF0znKZBN69f/QsRgf7AARMizajHhWoFwiYTf6/vB7iZhXwQaPxl9eePoFdTd/oQ07oouqn/evdNj1312SgE52+RpqiouoGv8IGKQcuOOt/v2jEyeUZM6vpCcfOD32E3VaoqKfqlfyF8VtSTxF5RG+ZpqvRYYAiIpk66ZTwhJwnra+hHH0D7OXD4h4qaM941O58tMVtyFlG0LmgWnm8lG8Sd9HYi3G+zYZ8="
    # anaconda token
    - secure: "U2+Wwxoogw+Tf/aNx2VUBC+BqUM+03sI6gInXAFeAKCN2THEUmYJhX9zY9S8I0GGiIc5jB2k6fVEu+Wt7RkxJi4MZ9UdA8NaiKo5N6ucArr5/SPz2ZkChSzGKZUv2lCKT/qtGXtI4FHwSc0Nn3Yc8nWSqal24p5W0Ql1cZxSjF2JHetHEIfqY7USMwdokLn+KgMHc+yiUHIryqWb6ERVIWuNnyUjv+W4tYVfOCtIo+IFvRN1Qy9nVueBfglkuDSACWIjeDv8kta3kcGvYjCjl2UrEEkeru5W3IFBu5abFZrK+hXLFTiay89ccydOxn3zXFPWP5QS9QX3C4OBvrIt8SIo+Dze1M5N3J9yAlqUXYAHLBsMJYtTiRfc7aGWEqPHmQVrYQMXb8sYT1k710Spg+kbo40pzziBGT5tQeVlcHzFJrlTj7syBcli3xBMo5ZN1ibS79Lmns9ebKEBf8D52xDYYH3G1OJ09ZtFipJ7zKc/Quno2rleLLSYV+X15rFRqWjQTjQNDOeg6hnv7PYuCoam3qRdI/1gMGD5unJKWt2y9GK1xuUy+kQgjyWmo6AiD/p/Mh/Q1O60rE+iXl+BDCHMvLioeuJBC8oGN3e5zXM0I5dRpgUu7Bb94VKQN0fshMzXO5UDc3vjoEH+v/SClxIdOtTL/v6IFmbBA3krgE0="
matrix:
    include:
        # linux environments
        - env:
            - PYTHON_VERSION=3.8
            - MPL_VERSION=3.3
            - QT_VERSION=5
            - DEPLOY_CONDA=true
          os: linux
        - env:
            - PYTHON_VERSION=3.8
            - MPL_VERSION=3.2
            - QT_VERSION=5
            - DEPLOY_CONDA=true
          os: linux
          os: linux
        - env:
            - PYTHON_VERSION=3.7
            - MPL_VERSION=3.3
            - QT_VERSION=5
            - DEPLOY_CONDA=true
          os: linux
        - env:
            - PYTHON_VERSION=3.7
            - BUILD_STR_END=
            - DEPLOY_CONDA=true
          os: linux
        - env:
            - PYTHON_VERSION=3.7
            - MPL_VERSION=3.0
          os: linux
        # osx environments
        - env:
            - PYTHON_VERSION=3.8
            - MPL_VERSION=3.1
            - DEPLOY_CONDA=true
          os: osx
        - env:
            - PYTHON_VERSION=3.7
            - BUILD_STR_END=
            - DEPLOY_CONDA=true
          os: osx
        - env:
            - PYTHON_VERSION=3.7
            - MPL_VERSION=3.1
            - DEPLOY_CONDA=true
          os: osx
        - env:
            - PYTHON_VERSION=3.7
            - MPL_VERSION=3.0
          os: osx

services:
    - xvfb

git:
    submodules: false
    depth: false

before_install:
    - if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then export DEPLOY_CONDA=false; fi
    # define functions to unset and reset encrypted variables
    - function unset_secure {
          CONDA_TOKEN_SAVE=$CONDA_REPO_TOKEN;
          unset CONDA_REPO_TOKEN;
          GH_REPO_TOKEN_SAVE=$GH_REPO_TOKEN;
          unset GH_REPO_TOKEN;
          }
    - function reset_secure {
          export CONDA_REPO_TOKEN=$CONDA_TOKEN_SAVE;
          export GH_REPO_TOKEN=$GH_REPO_TOKEN_SAVE;
          }
    - unset_secure
    # increase open files limit
    - ulimit -a
    - ulimit -Sn 10000
    - ulimit -a
      # select the os name for the conda installer
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          OS_NAME=MacOSX;
      else
          OS_NAME=Linux;
      fi
    # Install Miniconda.
    - |
      echo ""
      echo "Installing a fresh version of Miniconda."
      MINICONDA_URL="https://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-latest-${OS_NAME}-x86_64.sh"
      curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -bp $HOME/miniconda3
    - source $HOME/miniconda3/bin/activate root
    - hash -r
    - reset_secure

before_script:
    - if [[ $TRAVIS_OS_NAME == "linux" ]]; then
          export "DISPLAY=:99.0";
          sh -e /etc/init.d/xvfb start;
          sleep 3;
      fi

install:
    # unset the global CONDA_REPO_TOKEN variable because it is not needed
    # during the tests. This decreases the vulnerability
    - unset_secure
    - 'echo "backend : qt5agg" > matplotlibrc'
    - 'export MATPLOTLIBRC=`pwd`/matplotlibrc'
    - |
        echo ""
        echo "Configuring conda."
        conda config --set always_yes yes --set changeps1 no
        if [[ ${BUILD_STR_END} == "cf" ]]; then
            conda config --add channels conda-forge
        else
            conda config --add channels chilipp
        fi
        conda config --add channels psyplot
        conda update -q conda
        conda install conda-build anaconda-client conda-verify
    - if [[ $TRAVIS_TAG == "" ]]; then
        export GIT_BRANCH=$TRAVIS_BRANCH;
        conda config --add channels psyplot/label/master;
        conda config --add channels psyplot/label/${TRAVIS_BRANCH};
      fi
    - python ci/setup_append.py ci/conda-recipe matplotlib=${MPL_VERSION} pyqt=${QT_VERSION}
    - if [[ $USE_PIP == true ]]; then
        python -m pip install . -r ci/requirements.txt;
      fi
    - conda info -a
    - conda list
    - export PSYPLOT_REFERENCES=`pwd`/`python tests/get_ref_dir.py -mpl ${MPL_VERSION} -py ${PYTHON_VERSION}`
    - export REFBRANCH=`python tests/get_ref_dir.py -b -mpl ${MPL_VERSION} -py ${PYTHON_VERSION}`
    - git submodule update --init ${PSYPLOT_REFERENCES}
    - reset_secure

script:
    - unset_secure
    # install conda
    - if [[ $USE_PIP == true ]]; then
          pytest -v --cov=psy_maps && codecov;
      else
          conda build ci/conda-recipe --python $PYTHON_VERSION --no-include-recipe;
      fi
    - if [[ ${BUILD_STR_END} == "cf" ]]; then python ci/check_ref_deploy.py; fi
    # export the pw to make it available for the deploy
    - reset_secure
    # deploy here (don't use travis deploy because it requires homebrew)
    - if [[ $DEPLOY_CONDA == "true" && $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_REPO_SLUG == "psyplot/psy-maps" ]]; then
          ci/deploy_anaconda.py;
      fi

deploy:
  - provider: script
    script: ci/update_reference_submodule.py
    skip_cleanup: true
    on:
      branch: master
      condition: "-e deploy_references"
  - provider: script
    script: ci/update_submodules.py
    skip_cleanup: true
    on:
      condition: "-e deploy_references"
      branch: master
